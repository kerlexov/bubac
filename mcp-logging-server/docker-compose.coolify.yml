version: '3.8'

services:
  mcp-logging-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcp-logging-server
    restart: unless-stopped
    environment:
      # Database configuration
      - MCP_LOGGING_DB_CONNECTION=/app/data/logs.db
      - MCP_LOGGING_CONFIG_PATH=/app/config/config.yaml
      - MCP_LOGGING_RECOVERY_DIR=/app/recovery
      
      # Authentication settings
      - API_KEY_REQUIRED=${API_KEY_REQUIRED:-true}
      - API_KEYS_CONFIG_PATH=/app/config/api-keys.yaml
      
      # Rate limiting
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
      - RATE_LIMIT_REQUESTS_PER_MINUTE=${RATE_LIMIT_REQUESTS_PER_MINUTE:-1000}
      - RATE_LIMIT_BURST=${RATE_LIMIT_BURST:-100}
      
      # Security settings
      - TLS_ENABLED=false  # TLS handled by Coolify's reverse proxy
      - HTTPS_REDIRECT=false  # Handled by Coolify
      
      # Data protection
      - MASK_SENSITIVE_FIELDS=${MASK_SENSITIVE_FIELDS:-true}
      - SENSITIVE_FIELDS=${SENSITIVE_FIELDS:-password,token,secret,key,authorization,credit_card,ssn}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
    
    volumes:
      - mcp_logging_data:/app/data
      - mcp_logging_config:/app/config
      - mcp_logging_recovery:/app/recovery
      - mcp_logging_audit:/app/audit
    
    ports:
      - "${INGESTION_PORT:-8080}:8080"  # Log ingestion API
      - "${MCP_PORT:-8081}:8081"        # MCP server
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mcp_logging_data:
    driver: local
  mcp_logging_config:
    driver: local
  mcp_logging_recovery:
    driver: local
  mcp_logging_audit:
    driver: local